<EditForm Model="@Customer" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <div>
            <label>Customer Id</label>
            <div>
                <InputText @bind-Value="@Customer.CustomerId" @oninput="OnInputCustomerId" />
                <ValidationMessage For="@(()=>Customer.CustomerId)" />
            </div>
        </div>
    </div>
    <div class="form-group">
        <div>
            <label>Company Name</label>
            <div>
                <InputText @bind-Value="@Customer.CompanyName" @oninput="OnInputCompanyName" />
                <ValidationMessage For="@(()=>Customer.CompanyName)" />
            </div>
        </div>
    </div>
    <div class="form-group">
        <div>
            <label>Address</label>
            <div>
                <InputText @bind-Value="@Customer.Address" @oninput="OnInputAddress" />
                <ValidationMessage For="@(()=>Customer.Address)" />
            </div>
        </div>
    </div>
    <div class="form-group">
        <div>
            <label>Country</label>
            <div>
                <InputText @bind-Value="@Customer.Country" @oninput="OnInputCountry" />
                <ValidationMessage For="@(()=>Customer.Country)" />
            </div>
        </div>
    </div>  
    <button type="submit" class="btn btn-@ButtonStyle">
        @ButtonText
    </button>
</EditForm>
@code {
    [Parameter]
    public Customer? Customer { get; set; }
    [Parameter]
    public string ButtonText { get; set; } = "Save Changes";
    [Parameter]
    public string ButtonStyle { get; set; } = "info";
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }
    [Parameter]
    public bool HasChanges { get; set; } = false;
    private void OnInputCustomerId(ChangeEventArgs args)
    {
        if(Customer?.CustomerId!=args.Value?.ToString())
        {
            HasChanges = true;
        }
    }
    private void OnInputCompanyName(ChangeEventArgs args)
    {
        if (Customer?.CompanyName != args.Value?.ToString())
        {
            HasChanges = true;
        }
    }
    private void OnInputAddress(ChangeEventArgs args)
    {
        if (Customer?.Address != args.Value?.ToString())
        {
            HasChanges = true;
        }
    }
    private void OnInputCountry(ChangeEventArgs args)
    {
        if (Customer?.Country != args.Value?.ToString())
        {
            HasChanges = true;
        }
    }
    public void ClearChanges()
    {
        HasChanges = false;
    }
}
