@using Microsoft.EntityFrameworkCore @*ToListAsync extension method*@
@page "/customers/{country?}"
@*@inject NorthwindContext db;*@ @*direct to db*@
@inject INorthwindService service
<h3>Customers @(string.IsNullOrWhiteSpace(Country) ? "Worldwide" : "in " + Country)</h3>
@if (customers is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Company Name</th>
                <th>Address</th>
                <th>Phone</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Customer c in customers)
            {
                <tr>
                    <td>@c.CustomerId</td>
                    <td>@c.CompanyName</td>
                    <td>
                        @c.Address
                        @c.City
                        @c.PostalCode
                        @c.Country
                    </td>
                    <td>@c.Phone</td>
                    <td>
                        <a class="btn btn-info" href="editcustomer/@c.CustomerId"><i class="oi-pencil"></i></a>
                        <a class="btn btn-danger" href="deletecustomer/@c.CustomerId"><i class="oi-trash"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    [Parameter]
    public string? Country { get; set; }
    private IEnumerable<Customer>? customers;
    protected override async Task OnParametersSetAsync()
    {
        if (string.IsNullOrWhiteSpace(Country))
        {
            //customers = await db.Customers.ToListAsync();//direct to db
            customers = await service.GetCustomersAsync();
        }
        else
        {
            //customers = await db.Customers.Where(c => c.Country == Country).ToListAsync();//direct to db
            customers = await service.GetCustomersAsync(Country);
        }
    }
}